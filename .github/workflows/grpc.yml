name: grpc

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  CLN-GRPC:
    name: Server test
    runs-on: macos-14
    env:
      TOOLCHAIN: stable
    timeout-minutes: 180
    strategy:
      fail-fast: true
      matrix:
        bitcoind-version: ["27.1"]
    steps:
      - name: Checkout
        run: git clone https://github.com/ElementsProject/lightning.git

      - name: Download Bitcoin ${{ matrix.bitcoind-version }} & install binaries
        run: |
          export BITCOIND_VERSION=${{ matrix.bitcoind-version }}
          export TARGET_ARCH="arm64-apple-darwin"

          wget https://bitcoincore.org/bin/bitcoin-core-${BITCOIND_VERSION}/bitcoin-${BITCOIND_VERSION}-${TARGET_ARCH}.tar.gz
          tar -xzf bitcoin-${BITCOIND_VERSION}-${TARGET_ARCH}.tar.gz
          sudo mv bitcoin-${BITCOIND_VERSION}/bin/* /usr/local/bin
          rm -rf bitcoin-${BITCOIND_VERSION}-${TARGET_ARCH}.tar.gz bitcoin-${BITCOIND_VERSION}

      - name: Install dependencies
        run: |
          cd lightning
          export PATH="/usr/local/opt:/Users/runner/.local/bin:/opt/homebrew/bin/python3.10/bin:$PATH"

          brew install gnu-sed python@3.10 autoconf automake libtool protobuf
          python3.10 -m pip install -U --user poetry==1.8.0 wheel pip mako
          python3.10 -m poetry install

      - name: Build and install CLN
        run: |
          cd lightning
          export CPATH=/opt/homebrew/include
          export LIBRARY_PATH=/opt/homebrew/lib

          python3.10 -m poetry run ./configure --disable-valgrind --disable-compat
          python3.10 -m poetry run make

      - name: Start bitcoind in regtest mode
        run: |
          bitcoind -regtest -daemon
          sleep 5

      - name: Generate initial block
        run: |
          bitcoin-cli -regtest createwallet default_wallet
          bitcoin-cli -regtest generatetoaddress 1 $(bitcoin-cli -regtest getnewaddress)
          sleep 2

      - name: Start CLN in regtest mode
        run: |
          cd lightning
          lightningd/lightningd --network=regtest --log-file=/tmp/l1.log --daemon --grpc-port=9736
          sleep 5

      - name: Verify CLN is running
        run: |
          cd lightning
          cli/lightning-cli --regtest getinfo


      - name: file dhundna zara
        run: |
            ls -a
            cd ..
            ls -a
            cd /CLN-MCP/lightning
            ls -a

      - name: tree
        run: |
            brew install tree
            tree -a

      - name: Install Rust ${{ env.toolchain }} toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal --default-toolchain ${{ env.toolchain }}
          rustup override set ${{ env.toolchain }}

      - name: Install protoc (macOS)
        run: |
          brew install protobuf

      - name: Build server
        run: cargo run -- --certs-dir ../.lightning/regtest/
